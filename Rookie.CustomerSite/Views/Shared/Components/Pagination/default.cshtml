@using Rookie.CustomerSite.ViewModel
@using Rookie.CustomerSite.ViewModel.Product
@model PagedResponseVM<ProductVm>


@{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; }
<div class="pages">
    <nav aria-label="Page navigation example" class="d-flex justify-content-center">
        <ul class="pagination">
            <li class="page-item @prevDisabled">
                <a asp-page="./Index"
                   asp-route-sortOrder="@Model.SortOrder"
                   asp-route-pageIndex="@(Model.Page - 1)"
                   asp-route-currentFilter="@Model.Search"
                   aria-label="Previous"
                   class="page-link">
                    <span aria-hidden="true">«</span><span class="sr-only">Previous</span>
                </a>
            </li>
            <li class="page-item active"><a href="#" class="page-link">@Model.Page</a></li>
            <li class="page-item @nextDisabled">
                <a asp-page="./Index"
                   asp-route-sortOrder="@Model.SortOrder"
                   asp-route-pageIndex="@(Model.Page + 1)"
                   asp-route-currentFilter="@Model.Search"
                   aria-label="Next"
                   class="page-link">
                    <span aria-hidden="true">»</span><span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
</div>